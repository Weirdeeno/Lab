/*
5.	Описати рекурсивну функцію Combin1 (N, K) цілого типу, яка знаходить C (N, K) - число поєднань з N елементів по K - за допомогою рекурентного співвідношення:
C (N, 0) = C (N, N) = 1,
C (N, K) = C (N - 1, K) + C (N - 1, K - 1) при 0 <K <N.
Параметри функції - цілі числа; N> 0, 0 ≤ K ≤ N. Дано число N і п'ять різних значень K.
Вивести числа C (N, K) разом з кількістю рекурсивних викликів функції Combin1, що необхідні для їх знаходження.
*/

#include <iostream>
using namespace std;
int Combin1(int n, int k);
int count = 0;
int main()
{
    setlocale(0, "");
    int n, k;
    cout << "Введите натуральное число n: ";
    cin >> n;
    cout << "Введите натуральное число, не больше:  " << n << " ";
    cin >> k;
    cout << "Число сочетаний из " << n << " по " << k << ": " << Combin1(n, k) << "\nКоличество вызовов функции: " << count << "\n";
    return 0;
}
int Combin1(int n, int k)
{
    count++;
    if (k == 0 || k == n)
        return 1;
    else
        return Combin1(n - 1, k) + Combin1(n - 1, k - 1);

}